
<%
var TAGNAME = 0
var CONTENT = 1
var ATTRS = 2
var ANCESTORS = 3
//check if an associative array is empty
function isaaEmpty(aa){
    for (key in aa)
        return false
    return true
}



//attrs is an associative array that holds attributes key-value pairs
function openTag(tagName, attrs){%>
    <<%= tagName %>
    <%for (attrKey in attrs){%>
        <%= attrKey %> = "<%= attrs[attrKey] %>"
    <%}%>
    >
<%}

function closeTag(tagName){%>
    </<%=tagName%>>
<%}

function insert(value){%>
    <%= value %>
<%}

function printAncestors(ancestorTags){
    if (! (ancestorTags instanceof Array))
        return
    for (var i = 0; i < ancestorTags.length; i++)
        openTag(ancestorTags[i])
}



function tagNode(tagName, value, attrs){
var tmp =
{
'tagName' : tagName,
'attrs' : attrs,
'isEmpty' : false,
'print' : function(){
    if(this.isEmpty)
        return
    for (var i = 0; i < this.value.length; i++){%>
    <<%= tagName %>
        <%for (attrKey in attrs){%>
            <%= attrKey %> = "<%= attrs[attrKey] %>"
        <%}%>
        ><%= this.value[i] %></<%=tagName%>>
    <%}
}
}
//take either one or array of values
if (value instanceof Array)
    tmp.value = value
else{
    tmp.value = [value]
    if (value == null)
        tmp.isEmpty = true
}

return tmp
}

function printTagNode(tagName, value, attrs){
    var tmp = tagNode(tagName, value, attrs)
    tmp.print()
}

function tagTree(tagName, children, attrs){
var tmp = {
'tagName' : tagName,
'attrs' : attrs,
'print' : function(){
    if(this.isEmpty)
        return
    for(var childIdx = 0; childIdx < this.children.length; childIdx++){
        openTag(this.tagName)

        var child = this.children[childIdx]
        for (var childTag =0; childTag <child.length; childTag++){
            child[childTag].print()
        }
        closeTag(this.tagName)
    }
}
}
if (!(children[0] instanceof Array))
    tmp.children = [children]
else
    tmp.children = children
tmp.isEmpty = true
for (var childIdx = 0; childIdx < tmp.children.length; childIdx++){
    var child = tmp.children[childIdx]
    for (var childTag =0; childTag <child.length; childTag++){
        if (!(child[childTag].isEmpty)){
            tmp.isEmpty = false
            break
        }
    }if(!tmp.isEmpty)
        break
}
return tmp
}

function printTagTree(tagName, children, attrs){
    var tmp = tagTree(tagName, children, attrs)
    tmp.print()
}
%>

<?xml version="1.0" encoding="utf-8"?>
<AddItemRequest xmlns="urn:ebay:apis:eBLBaseComponents"><%
    printTagTree('RequesterCredentials', [tagNode('eBayAuthToken', params['RequesterCredentials.eBayAuthToken'])])
    printTagNode('ErrorHandling', params.ErrorHandling)
    printTagNode('ErrorLanguage', params.ErrorLanguage)
    printTagNode('MessageID', params.MessageID)
    printTagNode('Version', params.Version)
    printTagNode('WarningLevel', params.WarningLevel)
    printTagTree('Item', [
        tagNode('ApplicationData', params['Item.ApplicationData']),
        tagTree('AttributeArray', [
            tagTree('Attribute', [
                tagTree('Value', [
                    tagNode('ValueLiteral', params['Item.AttributeArray.Attribute.Value.ValueLiteral'])])], {
            attributeLabel : params['Item.AttributeArray.Attribute.attributeLabel']})]),
        tagTree('AttributeSetArray', [
            tagTree('AttributeSet', [
                tagTree('Attribute', [
                    tagTree('Value', [
                        tagNode('ValueID', params['Item.AttributeSetArray.AttributeSet.Attribute.Value.ValueID']), 
                        tagNode('ValueLiteral', params['Item.AttributeSetArray.AttributeSet.Attribute.Value.ValueLiteral'])])], {
                attributeID : params['Item.AttributeSetArray.AttributeSet.Attribute.attributeID']})], {
            attributeSetID : params['Item.AttributeSetArray.AttributeSet.attributeSetID'], 
            attributeSetVersion : params['Item.AttributeSetArray.AttributeSet.attributeSetVersion']})]), 
        tagNode('AutoPay', params['Item.AutoPay']),
        tagTree('BestOfferDetails', [
            tagNode('BestOfferEnabled', params['Item.BestOfferDetails.BestOfferEnabled'])]),
        tagTree('BuyerRequirementDetails', [
            tagNode('LinkedPayPalAccount', params['Item.BuyerRequirementDetails.LinkedPayPalAccount']),
            tagTree('MaximumBuyerPolicyViolations', [
                tagNode('Count', params['Item.BuyerRequirementDetails.MaximumBuyerPolicyViolations.Count']), 
                tagNode('Period', params['Item.BuyerRequirementDetails.MaximumBuyerPolicyViolations.Period'])]),
            tagTree('MaximumItemRequirements', [
                tagNode('MaximumItemCount', params['Item.BuyerRequirementDetails.MaximumItemRequirements.MaximumItemCount']), 
                tagNode('MinimumFeedbackScore', params['Item.BuyerRequirementDetails.MaximumItemRequirements.MinimumFeedbackScore'])]),
            tagTree('MaximumUnpaidItemStrikesInfo', [
                tagNode('Count', params['Item.BuyerRequirementDetails.MaximumUnpaidItemStrikesInfo.Count']), 
                tagNode('Period', params['Item.BuyerRequirementDetails.MaximumUnpaidItemStrikesInfo.Period'])]), 
            tagNode('MinimumFeedbackScore', params['Item.BuyerRequirementDetails.MinimumFeedbackScore']), 
            tagNode('ShipToRegistrationCountry', params['Item.BuyerRequirementDetails.ShipToRegistrationCountry']),
            tagTree('VerifiedUserRequirements', [
                tagNode('MinimumFeedbackScore', params['Item.BuyerRequirementDetails.VerifiedUserRequirements.MinimumFeedbackScore']), 
                tagNode('VerifiedUser', params['Item.BuyerRequirementDetails.VerifiedUserRequirements.VerifiedUser'])]), 
            tagNode('ZeroFeedbackScore', params['Item.BuyerRequirementDetails.ZeroFeedbackScore'])]), 
        tagNode('BuyerResponsibleForShipping', params['Item.BuyerResponsibleForShipping']), 
        tagNode('BuyItNowPrice', params['Item.BuyItNowPrice'], {
        currencyID : params['Item.BuyItNowPrice.currencyID']}), 
        tagNode('CategoryBasedAttributesPrefill', params['Item.CategoryBasedAttributesPrefill']), 
        tagNode('CategoryMappingAllowed', params['Item.CategoryMappingAllowed']),
        tagTree('Charity', [
            tagNode('CharityID', params['Item.Charity.CharityID']), 
            tagNode('CharityNumber', params['Item.Charity.CharityNumber']), 
            tagNode('DonationPercent', params['Item.Charity.DonationPercent'])]), 
        tagNode('ConditionID', params['Item.ConditionID']), 
        tagNode('Country', params['Item.Country']), 
        tagNode('CrossBorderTrade', params['Item.CrossBorderTrade']), 
        tagNode('Currency', params['Item.Currency']), 
        tagNode('Description', params['Item.Description']), 
        tagNode('DisableBuyerRequirements', params['Item.DisableBuyerRequirements']),
        tagTree('DiscountPriceInfo', [
            tagNode('MadeForOutletComparisonPrice', params['Item.DiscountPriceInfo.MadeForOutletComparisonPrice'], {
            currencyID : params['Item.DiscountPriceInfo.MadeForOutletComparisonPrice.currencyID']}), 
            tagNode('MinimumAdvertisedPrice', params['Item.DiscountPriceInfo.MinimumAdvertisedPrice'], {
            currencyID : params['Item.DiscountPriceInfo.MinimumAdvertisedPrice.currencyID']}), 
            tagNode('MinimumAdvertisedPriceExposure', params['Item.DiscountPriceInfo.MinimumAdvertisedPriceExposure']), 
            tagNode('OriginalRetailPrice', params['Item.DiscountPriceInfo.OriginalRetailPrice'], {
            currencyID : params['Item.DiscountPriceInfo.OriginalRetailPrice.currencyID']}), 
            tagNode('SoldOffeBay', params['Item.DiscountPriceInfo.SoldOffeBay']), 
            tagNode('SoldOneBay', params['Item.DiscountPriceInfo.SoldOneBay'])]), 
        tagNode('DispatchTimeMax', params['Item.DispatchTimeMax']),
        tagTree('ExtendedSellerContactDetails', [
            tagNode('ClassifiedAdContactByEmailEnabled', params['Item.ExtendedSellerContactDetails.ClassifiedAdContactByEmailEnabled']),
            tagTree('ContactHoursDetails', [
                tagNode('Hours1AnyTime', params['Item.ExtendedSellerContactDetails.ContactHoursDetails.Hours1AnyTime']), 
                tagNode('Hours1Days', params['Item.ExtendedSellerContactDetails.ContactHoursDetails.Hours1Days']), 
                tagNode('Hours1From', params['Item.ExtendedSellerContactDetails.ContactHoursDetails.Hours1From']), 
                tagNode('Hours1To', params['Item.ExtendedSellerContactDetails.ContactHoursDetails.Hours1To']), 
                tagNode('Hours2AnyTime', params['Item.ExtendedSellerContactDetails.ContactHoursDetails.Hours2AnyTime']), 
                tagNode('Hours2Days', params['Item.ExtendedSellerContactDetails.ContactHoursDetails.Hours2Days']), 
                tagNode('Hours2From', params['Item.ExtendedSellerContactDetails.ContactHoursDetails.Hours2From']), 
                tagNode('Hours2To', params['Item.ExtendedSellerContactDetails.ContactHoursDetails.Hours2To']), 
                tagNode('TimeZoneID', params['Item.ExtendedSellerContactDetails.ContactHoursDetails.TimeZoneID'])])]),
        tagTree('ExternalProductID', [
            tagNode('ReturnSearchResultOnDuplicates', params['Item.ExternalProductID.ReturnSearchResultOnDuplicates']), 
            tagNode('Type', params['Item.ExternalProductID.Type']), 
            tagNode('Value', params['Item.ExternalProductID.Value'])]), 
        tagNode('GetItFast', params['Item.GetItFast']), 
        tagNode('GiftIcon', params['Item.GiftIcon']), 
        tagNode('GiftServices', params['Item.GiftServices']), 
        tagNode('HitCounter', params['Item.HitCounter']),
        tagTree('ItemCompatibilityList', [
            tagTree('Compatibility', [
                tagNode('CompatibilityNotes', params['Item.ItemCompatibilityList.Compatibility.CompatibilityNotes']),
                tagTree('NameValueList', [
                    tagNode('Name', params['Item.ItemCompatibilityList.Compatibility.NameValueList.Name']), 
                    tagNode('Value', params['Item.ItemCompatibilityList.Compatibility.NameValueList.Value'])])])]),
        tagTree('ItemSpecifics', [
            tagTree('NameValueList', [
                tagNode('Name', params['Item.ItemSpecifics.NameValueList.Name']), 
                tagNode('Value', params['Item.ItemSpecifics.NameValueList.Value'])])]), 
        tagNode('LimitedWarrantyEligible', params['Item.LimitedWarrantyEligible']),
        tagTree('ListingCheckoutRedirectPreference', [
            tagNode('ProStoresStoreName', params['Item.ListingCheckoutRedirectPreference.ProStoresStoreName']), 
            tagNode('SellerThirdPartyUsername', params['Item.ListingCheckoutRedirectPreference.SellerThirdPartyUsername'])]),
        tagTree('ListingDesigner', [
            tagNode('LayoutID', params['Item.ListingDesigner.LayoutID']), 
            tagNode('OptimalPictureSize', params['Item.ListingDesigner.OptimalPictureSize']), 
            tagNode('ThemeID', params['Item.ListingDesigner.ThemeID'])]),
        tagTree('ListingDetails', [
            tagNode('BestOfferAutoAcceptPrice', params['Item.ListingDetails.BestOfferAutoAcceptPrice'], {
            currencyID : params['Item.ListingDetails.BestOfferAutoAcceptPrice.currencyID']}), 
            tagNode('LocalListingDistance', params['Item.ListingDetails.LocalListingDistance']), 
            tagNode('MinimumBestOfferMessage', params['Item.ListingDetails.MinimumBestOfferMessage']), 
            tagNode('MinimumBestOfferPrice', params['Item.ListingDetails.MinimumBestOfferPrice'], {
            currencyID : params['Item.ListingDetails.MinimumBestOfferPrice.currencyID']}), 
            tagNode('PayPerLeadEnabled', params['Item.ListingDetails.PayPerLeadEnabled'])]), 
        tagNode('ListingDuration', params['Item.ListingDuration']), 
        tagNode('ListingEnhancement', params['Item.ListingEnhancement']), 
        tagNode('ListingSubtype2', params['Item.ListingSubtype2']), 
        tagNode('ListingType', params['Item.ListingType']), 
        tagNode('Location', params['Item.Location']),
        tagTree('LookupAttributeArray', [
            tagTree('LookupAttribute', [
                tagNode('Name', params['Item.LookupAttributeArray.LookupAttribute.Name']), 
                tagNode('Value', params['Item.LookupAttributeArray.LookupAttribute.Value'])])]), 
        tagNode('LotSize', params['Item.LotSize']), 
        tagNode('MotorsGermanySearchable', params['Item.MotorsGermanySearchable']),
        tagTree('PaymentDetails', [
            tagNode('DaysToFullPayment', params['Item.PaymentDetails.DaysToFullPayment']), 
            tagNode('DepositAmount', params['Item.PaymentDetails.DepositAmount'], {
            currencyID : params['Item.PaymentDetails.DepositAmount.currencyID']}), 
            tagNode('DepositType', params['Item.PaymentDetails.DepositType']), 
            tagNode('HoursToDeposit', params['Item.PaymentDetails.HoursToDeposit'])]), 
        tagNode('PaymentMethods', params['Item.PaymentMethods']), 
        tagNode('PayPalEmailAddress', params['Item.PayPalEmailAddress']),
        tagTree('PictureDetails', [
            tagNode('ExternalPictureURL', params['Item.PictureDetails.ExternalPictureURL']), 
            tagNode('GalleryDuration', params['Item.PictureDetails.GalleryDuration']), 
            tagNode('GalleryType', params['Item.PictureDetails.GalleryType']), 
            tagNode('GalleryURL', params['Item.PictureDetails.GalleryURL']), 
            tagNode('PhotoDisplay', params['Item.PictureDetails.PhotoDisplay']), 
            tagNode('PictureURL', params['Item.PictureDetails.PictureURL'])]), 
        tagNode('PostalCode', params['Item.PostalCode']), 
        tagNode('PostCheckoutExperienceEnabled', params['Item.PostCheckoutExperienceEnabled']),
        tagTree('PrimaryCategory', [
            tagNode('CategoryID', params['Item.PrimaryCategory.CategoryID'])]), 
        tagNode('PrivateListing', params['Item.PrivateListing']),
        tagTree('ProductListingDetails', [
            tagTree('BrandMPN', [
                tagNode('Brand', params['Item.ProductListingDetails.BrandMPN.Brand']), 
                tagNode('MPN', params['Item.ProductListingDetails.BrandMPN.MPN'])]), 
            tagNode('EAN', params['Item.ProductListingDetails.EAN']), 
            tagNode('GTIN', params['Item.ProductListingDetails.GTIN']), 
            tagNode('IncludePrefilledItemInformation', params['Item.ProductListingDetails.IncludePrefilledItemInformation']), 
            tagNode('IncludeStockPhotoURL', params['Item.ProductListingDetails.IncludeStockPhotoURL']), 
            tagNode('ISBN', params['Item.ProductListingDetails.ISBN']), 
            tagNode('ListIfNoProduct', params['Item.ProductListingDetails.ListIfNoProduct']), 
            tagNode('ProductID', params['Item.ProductListingDetails.ProductID']), 
            tagNode('ProductReferenceID', params['Item.ProductListingDetails.ProductReferenceID']), 
            tagNode('ReturnSearchResultOnDuplicates', params['Item.ProductListingDetails.ReturnSearchResultOnDuplicates']),
            tagTree('TicketListingDetails', [
                tagNode('EventTitle', params['Item.ProductListingDetails.TicketListingDetails.EventTitle']), 
                tagNode('PrintedDate', params['Item.ProductListingDetails.TicketListingDetails.PrintedDate']), 
                tagNode('PrintedTime', params['Item.ProductListingDetails.TicketListingDetails.PrintedTime']), 
                tagNode('Venue', params['Item.ProductListingDetails.TicketListingDetails.Venue'])]), 
            tagNode('UPC', params['Item.ProductListingDetails.UPC']), 
            tagNode('UseFirstProduct', params['Item.ProductListingDetails.UseFirstProduct']), 
            tagNode('UseStockPhotoURLAsGallery', params['Item.ProductListingDetails.UseStockPhotoURLAsGallery'])]), 
        tagNode('Quantity', params['Item.Quantity']),
        tagTree('QuantityInfo', [
            tagNode('MinimumRemnantSet', params['Item.QuantityInfo.MinimumRemnantSet'])]), 
        tagNode('ReservePrice', params['Item.ReservePrice'], {
        currencyID : params['Item.ReservePrice.currencyID']}),
        tagTree('ReturnPolicy', [
            tagNode('Description', params['Item.ReturnPolicy.Description']), 
            tagNode('EAN', params['Item.ReturnPolicy.EAN']), 
            tagNode('RefundOption', params['Item.ReturnPolicy.RefundOption']), 
            tagNode('ReturnsAcceptedOption', params['Item.ReturnPolicy.ReturnsAcceptedOption']), 
            tagNode('ReturnsWithinOption', params['Item.ReturnPolicy.ReturnsWithinOption']), 
            tagNode('ShippingCostPaidByOption', params['Item.ReturnPolicy.ShippingCostPaidByOption']), 
            tagNode('WarrantyDurationOption', params['Item.ReturnPolicy.WarrantyDurationOption']), 
            tagNode('WarrantyOfferedOption', params['Item.ReturnPolicy.WarrantyOfferedOption']), 
            tagNode('WarrantyTypeOption', params['Item.ReturnPolicy.WarrantyTypeOption'])]), 
        tagNode('ScheduleTime', params['Item.ScheduleTime']),
        tagTree('SecondaryCategory', [
            tagNode('CategoryID', params['Item.SecondaryCategory.CategoryID'])]),
        tagTree('Seller', [
            tagNode('MotorsDealer', params['Item.Seller.MotorsDealer'])]),
        tagTree('SellerContactDetails', [
            tagNode('CompanyName', params['Item.SellerContactDetails.CompanyName']), 
            tagNode('County', params['Item.SellerContactDetails.County']), 
            tagNode('Phone2AreaOrCityCode', params['Item.SellerContactDetails.Phone2AreaOrCityCode']), 
            tagNode('Phone2CountryCode', params['Item.SellerContactDetails.Phone2CountryCode']), 
            tagNode('Phone2LocalNumber', params['Item.SellerContactDetails.Phone2LocalNumber']), 
            tagNode('PhoneAreaOrCityCode', params['Item.SellerContactDetails.PhoneAreaOrCityCode']), 
            tagNode('PhoneCountryCode', params['Item.SellerContactDetails.PhoneCountryCode']), 
            tagNode('PhoneLocalNumber', params['Item.SellerContactDetails.PhoneLocalNumber']), 
            tagNode('Street', params['Item.SellerContactDetails.Street']), 
            tagNode('Street2', params['Item.SellerContactDetails.Street2'])]), 
        tagNode('SellerInventoryID', params['Item.SellerInventoryID']),
        tagTree('SellerProfiles', [
            tagTree('SellerPaymentProfile', [
                tagNode('PaymentProfileID', params['Item.SellerProfiles.SellerPaymentProfile.PaymentProfileID']), 
                tagNode('PaymentProfileName', params['Item.SellerProfiles.SellerPaymentProfile.PaymentProfileName'])]),
            tagTree('SellerReturnProfile', [
                tagNode('ReturnProfileID', params['Item.SellerProfiles.SellerReturnProfile.ReturnProfileID']), 
                tagNode('ReturnProfileName', params['Item.SellerProfiles.SellerReturnProfile.ReturnProfileName'])]),
            tagTree('SellerShippingProfile', [
                tagNode('ShippingProfileID', params['Item.SellerProfiles.SellerShippingProfile.ShippingProfileID']), 
                tagNode('ShippingProfileName', params['Item.SellerProfiles.SellerShippingProfile.ShippingProfileName'])])]), 
        tagNode('SellerProvidedTitle', params['Item.SellerProvidedTitle']),
        tagTree('ShippingDetails', [
            tagTree('CalculatedShippingRate', [
                tagNode('InternationalPackagingHandlingCosts', params['Item.ShippingDetails.CalculatedShippingRate.InternationalPackagingHandlingCosts'], {
                currencyID : params['Item.ShippingDetails.CalculatedShippingRate.InternationalPackagingHandlingCosts.currencyID']}), 
                tagNode('MeasurementUnit', params['Item.ShippingDetails.CalculatedShippingRate.MeasurementUnit']), 
                tagNode('OriginatingPostalCode', params['Item.ShippingDetails.CalculatedShippingRate.OriginatingPostalCode']), 
                tagNode('PackageDepth', params['Item.ShippingDetails.CalculatedShippingRate.PackageDepth'], {
                measurementSystem : params['Item.ShippingDetails.CalculatedShippingRate.PackageDepth.measurementSystem'], 
                unit : params['Item.ShippingDetails.CalculatedShippingRate.PackageDepth.unit']}), 
                tagNode('PackageLength', params['Item.ShippingDetails.CalculatedShippingRate.PackageLength'], {
                measurementSystem : params['Item.ShippingDetails.CalculatedShippingRate.PackageLength.measurementSystem'], 
                unit : params['Item.ShippingDetails.CalculatedShippingRate.PackageLength.unit']}), 
                tagNode('PackageWidth', params['Item.ShippingDetails.CalculatedShippingRate.PackageWidth'], {
                measurementSystem : params['Item.ShippingDetails.CalculatedShippingRate.PackageWidth.measurementSystem'], 
                unit : params['Item.ShippingDetails.CalculatedShippingRate.PackageWidth.unit']}), 
                tagNode('PackagingHandlingCosts', params['Item.ShippingDetails.CalculatedShippingRate.PackagingHandlingCosts'], {
                currencyID : params['Item.ShippingDetails.CalculatedShippingRate.PackagingHandlingCosts.currencyID']}), 
                tagNode('ShippingIrregular', params['Item.ShippingDetails.CalculatedShippingRate.ShippingIrregular']), 
                tagNode('ShippingPackage', params['Item.ShippingDetails.CalculatedShippingRate.ShippingPackage']), 
                tagNode('WeightMajor', params['Item.ShippingDetails.CalculatedShippingRate.WeightMajor'], {
                measurementSystem : params['Item.ShippingDetails.CalculatedShippingRate.WeightMajor.measurementSystem'], 
                unit : params['Item.ShippingDetails.CalculatedShippingRate.WeightMajor.unit']}), 
                tagNode('WeightMinor', params['Item.ShippingDetails.CalculatedShippingRate.WeightMinor'], {
                measurementSystem : params['Item.ShippingDetails.CalculatedShippingRate.WeightMinor.measurementSystem'], 
                unit : params['Item.ShippingDetails.CalculatedShippingRate.WeightMinor.unit']})]), 
            tagNode('CODCost', params['Item.ShippingDetails.CODCost'], {
            currencyID : params['Item.ShippingDetails.CODCost.currencyID']}), 
            tagNode('ExcludeShipToLocation', params['Item.ShippingDetails.ExcludeShipToLocation']),
            tagTree('InsuranceDetails', [
                tagNode('InsuranceFee', params['Item.ShippingDetails.InsuranceDetails.InsuranceFee'], {
                currencyID : params['Item.ShippingDetails.InsuranceDetails.InsuranceFee.currencyID']}), 
                tagNode('InsuranceOption', params['Item.ShippingDetails.InsuranceDetails.InsuranceOption'])]), 
            tagNode('InsuranceFee', params['Item.ShippingDetails.InsuranceFee'], {
            currencyID : params['Item.ShippingDetails.InsuranceFee.currencyID']}), 
            tagNode('InsuranceOption', params['Item.ShippingDetails.InsuranceOption']),
            tagTree('InternationalInsuranceDetails', [
                tagNode('InsuranceFee', params['Item.ShippingDetails.InternationalInsuranceDetails.InsuranceFee'], {
                currencyID : params['Item.ShippingDetails.InternationalInsuranceDetails.InsuranceFee.currencyID']}), 
                tagNode('InsuranceOption', params['Item.ShippingDetails.InternationalInsuranceDetails.InsuranceOption'])]), 
            tagNode('InternationalPromotionalShippingDiscount', params['Item.ShippingDetails.InternationalPromotionalShippingDiscount']), 
            tagNode('InternationalShippingDiscountProfileID', params['Item.ShippingDetails.InternationalShippingDiscountProfileID']),
            tagTree('InternationalShippingServiceOption', [
                tagNode('ShippingService', params['Item.ShippingDetails.InternationalShippingServiceOption.ShippingService']), 
                tagNode('ShippingServiceAdditionalCost', params['Item.ShippingDetails.InternationalShippingServiceOption.ShippingServiceAdditionalCost'], {
                currencyID : params['Item.ShippingDetails.InternationalShippingServiceOption.ShippingServiceAdditionalCost.currencyID']}), 
                tagNode('ShippingServiceCost', params['Item.ShippingDetails.InternationalShippingServiceOption.ShippingServiceCost'], {
                currencyID : params['Item.ShippingDetails.InternationalShippingServiceOption.ShippingServiceCost.currencyID']}), 
                tagNode('ShippingServicePriority', params['Item.ShippingDetails.InternationalShippingServiceOption.ShippingServicePriority']), 
                tagNode('ShipToLocation', params['Item.ShippingDetails.InternationalShippingServiceOption.ShipToLocation'])]), 
            tagNode('PaymentInstructions', params['Item.ShippingDetails.PaymentInstructions']), 
            tagNode('PromotionalShippingDiscount', params['Item.ShippingDetails.PromotionalShippingDiscount']),
            tagTree('RateTableDetails', [
                tagNode('DomesticRateTable', params['Item.ShippingDetails.RateTableDetails.DomesticRateTable'])]),
            tagTree('SalesTax', [
                tagNode('SalesTaxPercent', params['Item.ShippingDetails.SalesTax.SalesTaxPercent']), 
                tagNode('SalesTaxState', params['Item.ShippingDetails.SalesTax.SalesTaxState']), 
                tagNode('ShippingIncludedInTax', params['Item.ShippingDetails.SalesTax.ShippingIncludedInTax'])]), 
            tagNode('ShippingDiscountProfileID', params['Item.ShippingDetails.ShippingDiscountProfileID']),
            tagTree('ShippingServiceOptions', [
                tagNode('FreeShipping', params['Item.ShippingDetails.ShippingServiceOptions.FreeShipping']), 
                tagNode('ShippingService', params['Item.ShippingDetails.ShippingServiceOptions.ShippingService']), 
                tagNode('ShippingServiceAdditionalCost', params['Item.ShippingDetails.ShippingServiceOptions.ShippingServiceAdditionalCost'], {
                currencyID : params['Item.ShippingDetails.ShippingServiceOptions.ShippingServiceAdditionalCost.currencyID']}), 
                tagNode('ShippingServiceCost', params['Item.ShippingDetails.ShippingServiceOptions.ShippingServiceCost'], {
                currencyID : params['Item.ShippingDetails.ShippingServiceOptions.ShippingServiceCost.currencyID']}), 
                tagNode('ShippingServicePriority', params['Item.ShippingDetails.ShippingServiceOptions.ShippingServicePriority']), 
                tagNode('ShippingSurcharge', params['Item.ShippingDetails.ShippingServiceOptions.ShippingSurcharge'], {
                currencyID : params['Item.ShippingDetails.ShippingServiceOptions.ShippingSurcharge.currencyID']})]), 
            tagNode('ShippingType', params['Item.ShippingDetails.ShippingType'])]),
        tagTree('ShippingPackageDetails', [
            tagNode('MeasurementUnit', params['Item.ShippingPackageDetails.MeasurementUnit']), 
            tagNode('PackageDepth', params['Item.ShippingPackageDetails.PackageDepth'], {
            measurementSystem : params['Item.ShippingPackageDetails.PackageDepth.measurementSystem'], 
            unit : params['Item.ShippingPackageDetails.PackageDepth.unit']}), 
            tagNode('PackageLength', params['Item.ShippingPackageDetails.PackageLength'], {
            measurementSystem : params['Item.ShippingPackageDetails.PackageLength.measurementSystem'], 
            unit : params['Item.ShippingPackageDetails.PackageLength.unit']}), 
            tagNode('PackageWidth', params['Item.ShippingPackageDetails.PackageWidth'], {
            measurementSystem : params['Item.ShippingPackageDetails.PackageWidth.measurementSystem'], 
            unit : params['Item.ShippingPackageDetails.PackageWidth.unit']}), 
            tagNode('ShippingIrregular', params['Item.ShippingPackageDetails.ShippingIrregular']), 
            tagNode('ShippingPackage', params['Item.ShippingPackageDetails.ShippingPackage']), 
            tagNode('WeightMajor', params['Item.ShippingPackageDetails.WeightMajor'], {
            measurementSystem : params['Item.ShippingPackageDetails.WeightMajor.measurementSystem'], 
            unit : params['Item.ShippingPackageDetails.WeightMajor.unit']}), 
            tagNode('WeightMinor', params['Item.ShippingPackageDetails.WeightMinor'], {
            measurementSystem : params['Item.ShippingPackageDetails.WeightMinor.measurementSystem'], 
            unit : params['Item.ShippingPackageDetails.WeightMinor.unit']})]), 
        tagNode('ShippingTermsInDescription', params['Item.ShippingTermsInDescription']), 
        tagNode('ShipToLocations', params['Item.ShipToLocations']), 
        tagNode('Site', params['Item.Site']), 
        tagNode('SKU', params['Item.SKU']), 
        tagNode('SkypeContactOption', params['Item.SkypeContactOption']), 
        tagNode('SkypeEnabled', params['Item.SkypeEnabled']), 
        tagNode('SkypeID', params['Item.SkypeID']), 
        tagNode('StartPrice', params['Item.StartPrice'], {
        currencyID : params['Item.StartPrice.currencyID']}),
        tagTree('Storefront', [
            tagNode('StoreCategory2ID', params['Item.Storefront.StoreCategory2ID']), 
            tagNode('StoreCategoryID', params['Item.Storefront.StoreCategoryID'])]), 
        tagNode('SubTitle', params['Item.SubTitle']), 
        tagNode('TaxCategory', params['Item.TaxCategory']), 
        tagNode('ThirdPartyCheckout', params['Item.ThirdPartyCheckout']), 
        tagNode('ThirdPartyCheckoutIntegration', params['Item.ThirdPartyCheckoutIntegration']), 
        tagNode('Title', params['Item.Title']), 
        tagNode('UseRecommendedProduct', params['Item.UseRecommendedProduct']), 
        tagNode('UseTaxTable', params['Item.UseTaxTable']), 
        tagNode('UUID', params['Item.UUID']),
        tagTree('VATDetails', [
            tagNode('BusinessSeller', params['Item.VATDetails.BusinessSeller']), 
            tagNode('RestrictedToBusiness', params['Item.VATDetails.RestrictedToBusiness']), 
            tagNode('VATPercent', params['Item.VATDetails.VATPercent'])]), 
        tagNode('VIN', params['Item.VIN']), 
        tagNode('VRM', params['Item.VRM'])])
%></AddItemRequest>